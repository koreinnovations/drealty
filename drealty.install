<?php
/**
 * @file
 * Installation functions for dRealty.
 */

/**
 * Implements hook_install().
 */
function drealty_install() {
  if (!drupal_installation_attempted()) {
    $type = entity_create('drealty_listing_type', array(
      'type' => 'basic_drealty_listing',
      'label' => 'Basic Drealty Listing',
      'weight' => 0,
      'locked' => 0,
      ));
    $type->save();
  }
  menu_rebuild();
}

/**
 * Implements hook_requirements().
 */
function drealty_requirements($phase) {

  $requirements = array();

  switch ($phase) {
    case 'install':
      // Ensure translations don't break at install time
      $t = get_t();

      if (!extension_loaded('curl')) {
        $requirements['drealty'] = array(
          'title' => $t('PHP Curl not installed.'),
          'description' => $t('dRealty requiresthat the PHP:cURL extension is installed and enabled. For more information and how to install PHP:cURL refer to the PHP:cURL manual: <a href="http://php.net/manual/en/book.curl.php" >http://php.net/manual/en/book.curl.php</a>'),
          'severity' => REQUIREMENT_ERROR,
        );
      }

      if (PHP_VERSION_ID < 50309) {
        $requirements['drealty_phpversion'] = array(
          'title' => t('PHP 5.3.5+ not detected.'),
          'description' => t('dRealty requires PHP 5.3.5 or higher to run. For backstory, please see how PHP 5.2.x handles object destruction: <a href="http://paul-m-jones.com/archives/262" >http://paul-m-jones.com/archives/262</a>'),
          'severity' => REQUIREMENT_ERROR,
        );
      }
      break;
    case 'runtime':
      $file_exists = file_exists(libraries_get_path('phRets') . '/phRets.php');
      $requirements['drealty'] = array(
        'title' => t('phRets library'),
        'value' => t('!msg', array(
          '!msg' => $file_exists ? 'Installed' : 'The ' . l('phRets', 'http://troda.com/projects/phrets') . ' was not found. Please ' . l('download', 'http://troda.com/projects/phrets/index.php?title=Download') . ' it into the Libraries folder.',
          )
        ),
        'severity' => $file_exists ? REQUIREMENT_OK : REQUIREMENT_ERROR,
      );
      if (PHP_VERSION_ID < 50309) {
        $requirements['drealty_phpversion'] = array(
          'title' => t('PHP 5.3.5+ not detected.'),
          'description' => t('dRealty requires PHP 5.3.5 or higher to run. For backstory, please see how PHP 5.2.x handles object destruction: <a href="http://paul-m-jones.com/archives/262" >http://paul-m-jones.com/archives/262</a>'),
          'severity' => REQUIREMENT_ERROR,
        );
      }
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function drealty_uninstall() {

  global $conf;

  $listings = db_select('drealty_listing', 'dl')
    ->fields('dl', array('id'))
    ->execute()
    ->fetchAllAssoc('id');

  // need to delete all the listings this way so that we can clean up the database and remove all the images properly
  foreach ($listings as $listing) {
    entity_delete('drealty_listing', $id);
  }

  // Bypass entity_load() as we cannot use it here.
  $types = db_select('drealty_listing_type', 'dlt')
    ->fields('dlt')
    ->execute()
    ->fetchAllAssoc('type');

  foreach ($types as $name => $type) {
    field_attach_delete_bundle('drealty_listing', $name);
  }

  field_purge_batch(10);

  foreach (array_keys($conf) as $key) {
    if (strpos($key, 'drealty_') === 0) {
      variable_del($key);
    }
  }

  cache_clear_all();
  menu_rebuild();
}

/**
 * Implements hook_schema().
 */
function drealty_schema() {

  // connections table
  $schema['drealty_connections'] = array(
    'description' => 'Base table to store connections.',
    'fields' => array(
    'conid' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
    'name' => array('type' => 'varchar', 'length' => 128, 'not null' => TRUE, 'default' => ''),
    'label' => array('type' => 'varchar', 'length' => 128, 'not null' => TRUE, 'default' => ''),
    'login_url' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
    'username' => array('type' => 'varchar', 'length' => 128, 'not null' => TRUE, 'default' => ''),
    'password' => array('type' => 'varchar', 'length' => 128, 'not null' => TRUE, 'default' => ''),
    'ua_string' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
    'ua_password' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
    'version' => array('type' => 'varchar', 'length' => 32, 'not null' => TRUE, 'default' => ''),
    'force_basic_auth' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    'use_compression' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    'use_interealty_auth' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    'active' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    'debug_mode' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('conid'),
  );

  // resources table
  $schema['drealty_resources'] = array(
    'description' => 'Base table for RETS Resources.',
    'fields' => array(
      'rid' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'conid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'systemname' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
      'description' => array('type' => 'varchar', 'length' => 255, 'not null' => FALSE),
      'lastupdate' => array('type' => 'int', 'not null' => TRUE),
      'keyfield' => array('type' => 'varchar', 'length' => 128, 'not null' => TRUE, 'default' => ''),
    ),
    'primary key' => array('rid'),
  );
//    // classes table
  $schema['drealty_classes'] = array(
    'description' => 'Base Table for RETS Classes.',
    'fields' => array(
      'cid' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'conid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'systemname' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
      'standardname' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
      'visiblename' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
      'description' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
      'rid' => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'normal', 'not null' => TRUE),
      'bundle' => array('type' => 'varchar', 'length' => 32, 'not null' => TRUE, 'default' => ''),
      'lifetime' => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'normal', 'not null' => TRUE, 'default' => 28800),
      'enabled' => array('type' => 'int', 'size' => 'tiny', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'configured' => array('type' => 'int', 'size' => 'tiny', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'lastupdate' => array('type' => 'int', 'not null' => TRUE),
      'status_values' => array('type' => 'varchar', 'length' => 255, 'not null' => FALSE, 'default' => ''),
      'process_images' => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'normal', 'not null' => TRUE, 'default' => 0),
      'image_field_name' => array('type' => 'varchar', 'length' => 50, 'not null' => FALSE),
      'image_dir' => array('type' => 'varchar', 'length' => 50, 'not null' => FALSE),
      'object_type' => array('type' => 'varchar', 'length' => 255, 'not null' => FALSE),
      'image_chunk_size' => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'normal', 'not null' => TRUE, 'default' => 25),
      'query_type' => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'tiny', 'not null' => TRUE, 'default' => 0),
      'chunk_size' => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'normal', 'not null' => TRUE, 'default' => 500),
      'override_status_query_text' => array('type' => 'varchar', 'length' => 255, 'not null' => FALSE, 'default' => ''),
      'do_geocoding' => array('type' => 'int', 'size' => 'tiny', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'geocoder_handler' => array('type' => 'varchar', 'length' => 50, 'not null' => FALSE),
      'offset_field' => array('type' => 'varchar', 'length' => 50, 'not null' => FALSE),
      'offset_amount' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'offset_max' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'photo_timestamp_field' => array('type' => 'varchar', 'length' => 50, 'not null' =>FALSE, 'default' => NULL),
      'expired_handler' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    ),
    'primary key' => array('cid'),
  );

  // field list table
  $schema['drealty_fields'] = array(
    'description' => 'Base table for RETS Fields',
    'fields' => array(
      'fid' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'conid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'rid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'systemname' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
      'standardname' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
      'longname' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
      'datatype' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),
      'max_length' => array('type' => 'int', 'size' => 'small', 'unsigned' => TRUE, 'not null' => FALSE),
      'field_precision' => array('type' => 'int', 'size' => 'small', 'unsigned' => TRUE, 'not null' => FALSE),
      'interpretation' => array('type' => 'varchar', 'length' => 255, 'not null' => FALSE, 'default' => NULL),
      'lookupname' => array('type' => 'text', 'size' => 'normal', 'not null' => FALSE, 'default' => NULL),
      'class' => array('type' => 'varchar', 'length' => 50, 'not null' => FALSE, 'default' => ''),
      'rets_returned' => array('type' => 'int', 'size' => 'small', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 1),
      'lastupdate' => array('type' => 'int', 'not null' > TRUE),
    ),
    'primary key' => array('fid'),
  );

  $schema['drealty_field_mappings'] = array(
    'description' => 'Base Table for field mappings',
    'fields' => array(
      'conid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'field_name' => array('type' => 'varchar', 'length' => 50, 'not null' => FALSE, 'default' => ''),
      'rid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'systemname' => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => ''),
      'field_api_type' => array('type' => 'varchar', 'length' => 32, 'not null' => TRUE, 'default' => 'drealty'),
      'data' => array('type' => 'blob', 'not null' => FALSE, 'serialize' => TRUE),
      'cid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'hash_exclude' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    ),
    'primary key' => array('conid', 'field_name', 'rid', 'systemname', 'cid'),
  );

  $schema['drealty_resource_mappings'] = array(
    'description' => 'Base Table for resource to node-type mappings',
    'fields' => array(
      'mid' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'conid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'rid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'entity_type' => array('type' => 'varchar', 'length' => 128, 'not null' => TRUE, 'default' => ''),
    ),
    'primary key' => array('mid'),
  );

  $schema['drealty_listing'] = array(
    'description' => 'Table to hold listing data',
    'fields' => array(
      'id' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE, 'description' => 'The internal Id'),
      'label' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'The title for this listing, defaults to rets id.'),
      'type' => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '', 'description' => "The {listing_type} of this listing."),
      'conid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'description' => 'The connection Id'),
      'hash' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'MD5 Hash used to determine if a listing has changed.'),
      'class' => array('type' => 'int', 'not null' => FALSE, 'default' => 0, 'description' => 'The Resource Class from the MLS'),
      'created' => array('type' => 'int', 'not null' => TRUE, 'default' => 0, 'description' => 'Date the listing was created in the system.'),
      'changed' => array('type' => 'int', 'not null' => TRUE, 'default' => 0, 'description' => 'Last date the listing was changed/updated in the system'),
      'process_images' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'Whether the images need to be processed'),
      'rets_imported' => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'tiny', 'not null' => FALSE, 'default' => 1, 'description' => 'Is this a user submitted listing or mls imported'),
      'rets_key' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'default' => NULL, 'description' => 'A unique identifier for this record from the source system. Typically this is the MLS #, however systems like Interealty use a sysid field. Select the apporpriate field.'),
      'rets_id' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'default' => NULL, 'description' => 'The unique MLS # used to look up an individual listing.'),
      'rets_status' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'default' => NULL, 'description' => 'RETS status field. This status field is used to build the default query.'),
      'rets_photo_modification_timestamp' => array('type' => 'varchar', 'length' => 128, 'not null' => FALSE, 'default' => NULL, 'description' => 'RETS field that indicates wether image data has been modified.'),
      'active' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 1, 'description' => 'Wether a listing is active or not. Active listings are listings that appear in the RETS Feed. Inactive Listings have since been removed from the feeed.')
    ),
    'primary key' => array('id'),
  );

  $schema['drealty_listing_type'] = array(
    'description' => 'Stores information about all defined drealty_listing_type types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique drealty_listing_type type ID.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this entity_test type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this drealty_listing_type type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this drealty_listing_type type in relation to others.',
      ),
      'locked' => array(
        'description' => 'A boolean indicating whether the administrator may delete this type.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this drealty_listing_type type.',
        'merge' => TRUE,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}

/**
 * Add two new fields to keep track of photo modification timestamp.
 */
function drealty_update_7300(&$sandbox) {
  db_add_field('drealty_listing', 'rets_photo_modification_timestamp', array('type' => 'varchar', 'length' => 128, 'not null' => FALSE, 'default' => NULL, 'description' => 'RETS field that indicates wether image data has been modified.'));
  db_add_field('drealty_classes', 'photo_timestamp_field', array('type' => 'varchar', 'length' => 50, 'not null' => FALSE, 'default' => NULL));
  return "Added rets_photo_modification_timestamp and photo_timestamp_field fields to the db.";
}


/**
 * Add fields to handle expired listings.
 */
function drealty_update_7301(&$sandbox) {
  db_add_field('drealty_listing', 'active', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 1));
  db_add_field('drealty_classes', 'expired_handler', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));
}

/**
 * Adjust length of 'rets_key' field to hold more data.
 *
 * @see http://drupal.org/node/1514350
 */

function drealty_update_7302(&$sandbox) {
  db_change_field('drealty_listing', 'rets_id', 'rets_id', array(
    'type' => 'varchar',
    'length' => 64,
    'not null' => FALSE,
    'description' => 'The unique MLS # used to look up an individual listing.',
  ));
  db_change_field('drealty_listing', 'rets_key', 'rets_key', array(
    'type' => 'varchar',
    'length' => 64,
    'not null' => FALSE,
    'description' => 'A unique identifier for this record from the source system. Typically this is the MLS #, however systems like Interealty use a sysid field. Select the apporpriate field.',
  ));
}


/**
 * Add title field to drealty_listings table.
 * 
 */
function drealty_update_7303(&$sandbox) {
  db_add_field('drealty_listing', 'label', array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'initial' => 'Title'));
}